// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
  habits    Habit[]
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime
  priority    Int
  estimatedTime Int
  completed   Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  course      String?
  subject     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  subTasks    SubTask[]
}

model SubTask {
  id        String   @id @default(uuid())
  title     String
  completed Boolean  @default(false)
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    String
}

model Habit {
  id        String   @id @default(uuid())
  name      String
  type      String   // e.g., 'boolean', 'quantity', 'timed'
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  logs      HabitLog[]
}

model HabitLog {
  id        String   @id @default(uuid())
  date      DateTime
  value     Int?     // e.g., hours, or 1 for checked
  habit     Habit    @relation(fields: [habitId], references: [id])
  habitId   String
}
